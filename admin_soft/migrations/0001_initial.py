# Generated by Django 4.2.8 on 2025-03-21 11:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('apartment_name', models.CharField(max_length=150, unique=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('block_name', models.CharField(default='Block1', help_text='Comma-separated names of blocks', max_length=150)),
                ('number_of_blocks', models.PositiveIntegerField(default=1, help_text='Total number of blocks in the apartment')),
                ('contact_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter a valid 10-digit contact number')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('password', models.CharField(max_length=128)),
                ('role', models.CharField(default='admin', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('image', models.ImageField(blank=True, null=True, upload_to='announcements/images/')),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('file_attachment_url', models.URLField(blank=True, max_length=500, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='admin_soft.apartment')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentAnnouncementMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('agenda', models.TextField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('is_completed', models.BooleanField(default=False)),
                ('final_outcome', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentAnnouncementPoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentAnnouncementPollOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=255)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='admin_soft.apartmentannouncementpoll')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_name', models.CharField(max_length=150)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='admin_soft.apartment')),
            ],
            options={
                'unique_together': {('apartment', 'block_name')},
            },
        ),
        migrations.CreateModel(
            name='ApartmentComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('solved', 'solved')], default='Pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentFlat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flat_number', models.CharField(max_length=10)),
                ('flat_type', models.CharField(choices=[('1BHK', '1 BHK'), ('2BHK', '2 BHK'), ('2.5BHK', '2.5 BHK'), ('3BHK', '3 BHK'), ('3.5BHK', '3.5 BHK'), ('4BHK', '4 BHK'), ('Studio', 'Studio')], max_length=10)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_contact', models.CharField(max_length=15)),
                ('owner_email', models.EmailField(max_length=254)),
                ('flat_size', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Occupied', 'Occupied'), ('Maintenance', 'Maintenance')], default='Available', max_length=15)),
                ('parking_slots', models.IntegerField(default=1)),
                ('purpose', models.CharField(choices=[('Rental', 'Rental'), ('Owned', 'Owned'), ('Other', 'Other')], default='Rental', max_length=10)),
                ('proof_document_url', models.URLField(blank=True, max_length=500, null=True)),
                ('password', models.CharField(default='Pavan@123', max_length=255)),
                ('role', models.CharField(default='owner', max_length=128)),
                ('apartment_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_soft.apartment')),
                ('block_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='admin_soft.apartmentblock')),
            ],
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.PositiveIntegerField()),
                ('is_vacant', models.BooleanField(default=False)),
                ('pg_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('specialty', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('joining_date', models.DateField()),
                ('hospital', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hospital_name', models.CharField(max_length=150, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('contact_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter a valid 10-digit contact number')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('password', models.CharField(max_length=128)),
                ('role', models.CharField(default='hospital', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('manufacturer', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField()),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('hospital', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('dob', models.DateField()),
                ('contact', models.CharField(max_length=15)),
                ('hospital', models.CharField(max_length=255)),
                ('joining_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PG',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pg_name', models.CharField(max_length=150, unique=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('contact_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter a valid 10-digit contact number')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('password', models.CharField(max_length=128)),
                ('role', models.CharField(default='pg', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pg_name', models.CharField(max_length=100)),
                ('room_number', models.CharField(max_length=10, unique=True)),
                ('number_of_beds', models.IntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Maintenance')], default='available', max_length=15)),
                ('rent_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rent_due_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserHospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('contact_number', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('doctor', 'Doctor'), ('receptionist', 'Receptionist'), ('pharmacist', 'Pharmacist'), ('other', 'Other Employees')], max_length=20)),
                ('permissions', models.JSONField()),
                ('hospital', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pg_name', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('check_in_date', models.DateField(blank=True, null=True)),
                ('check_out_date', models.DateField(blank=True, null=True)),
                ('payment_amount', models.IntegerField(default=0)),
                ('due_amount', models.IntegerField(default=0)),
                ('advance_amount', models.IntegerField(default=0)),
                ('total_amount_paid', models.IntegerField(default=0)),
                ('proof_name', models.CharField(blank=True, max_length=255, null=True)),
                ('other_proof_name', models.CharField(blank=True, max_length=255, null=True)),
                ('proof_number', models.CharField(blank=True, max_length=50, null=True)),
                ('proof_file', models.FileField(upload_to='tenant_proofs/')),
                ('password', models.CharField(max_length=128)),
                ('assigned_bed', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_soft.bed')),
                ('assigned_room', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_soft.room')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('Online', 'Online'), ('UPI', 'UPI')], max_length=50)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='admin_soft.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint_text', models.TextField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Resolved', 'Resolved')], default='Pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='admin_soft.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='bed',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beds', to='admin_soft.room'),
        ),
        migrations.CreateModel(
            name='AvailableSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('interval', models.IntegerField()),
                ('hospital', models.CharField(max_length=255)),
                ('is_booked', models.BooleanField(default=False)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_soft.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.TextField()),
                ('hospital', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Canceled', 'Canceled'), ('Completed', 'Completed')], default='Scheduled', max_length=10)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_soft.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_soft.patient')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_soft.availableslot')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentVisitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Enter a valid 10-digit contact number')])),
                ('flat_number', models.CharField(max_length=50)),
                ('purpose', models.CharField(choices=[('Family/Friend', 'Family/Friend'), ('Delivery', 'Delivery'), ('Maintenance', 'Maintenance'), ('Service', 'Service'), ('Other', 'Other')], max_length=20)),
                ('other_purpose', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.URLField(blank=True, max_length=500, null=True)),
                ('visit_date', models.DateField(default=django.utils.timezone.now)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('check_in_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('check_out_time', models.DateTimeField(blank=True, null=True)),
                ('is_checked_out', models.BooleanField(default=False)),
                ('action', models.CharField(default='Pending', max_length=20)),
                ('flat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visitors', to='admin_soft.apartmentflat')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentTenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('contact_number', models.CharField(max_length=15)),
                ('proof_file_url', models.URLField(blank=True, max_length=500, null=True)),
                ('password', models.CharField(default='Tenant@123', max_length=255)),
                ('role', models.CharField(default='tenant', max_length=128)),
                ('assigned_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_soft.apartmentflat')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('transaction_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('payment_mode', models.CharField(choices=[('CASH', 'Cash'), ('ONLINE', 'Online'), ('CHEQUE', 'Cheque'), ('BANK_TRANSFER', 'Bank Transfer')], max_length=20)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='admin_soft.apartmentflat')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flats', to='admin_soft.apartmentflat')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentComplaintReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('Owner', 'Owner'), ('Admin', 'Admin')], max_length=50)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='admin_soft.apartmentcomplaint')),
            ],
        ),
        migrations.AddField(
            model_name='apartmentcomplaint',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='admin_soft.apartmentflat'),
        ),
        migrations.CreateModel(
            name='ApartmentAnnouncementReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(max_length=50)),
                ('sender_role', models.CharField(choices=[('Owner', 'Owner'), ('Admin', 'Admin'), ('Tenant', 'Tenant')], max_length=50)),
                ('message', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('image', models.ImageField(blank=True, null=True, upload_to='replies/images/')),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('file_attachment_url', models.URLField(blank=True, max_length=500, null=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='admin_soft.apartmentannouncement')),
                ('meeting_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='admin_soft.apartmentannouncementmeeting')),
                ('poll_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='admin_soft.apartmentannouncementpoll')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentAnnouncementPollVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_votes', models.PositiveIntegerField(default=0)),
                ('admin_voters', models.ManyToManyField(blank=True, related_name='poll_votes', to='admin_soft.apartment')),
                ('owner_voters', models.ManyToManyField(blank=True, related_name='poll_votes', to='admin_soft.apartmentflat')),
                ('poll_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='admin_soft.apartmentannouncementpolloption')),
            ],
        ),
        migrations.AddField(
            model_name='apartmentannouncement',
            name='meeting_schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to='admin_soft.apartmentannouncementmeeting'),
        ),
        migrations.AddField(
            model_name='apartmentannouncement',
            name='poll_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to='admin_soft.apartmentannouncementpoll'),
        ),
    ]
